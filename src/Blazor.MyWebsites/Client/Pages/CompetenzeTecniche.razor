@page "/CompetenzeTecniche"
@inject HttpClient Http

<h3>Competenze Tecniche</h3>

<SpinnerLoader IsLoading="isLoading" HasError="hasError" Size="46px" AccentColor="#3498db" Color="White" Center="true" Spinner="@Spinner">
    <ContentTemplate>
        <CompetenzaViewComponent skills=@skills hideRowsPerPage=@hideRowsPerPage hidePageNumber=@hidePageNumber hidePagination=@hidePagination rowsPerPage="10"></CompetenzaViewComponent>
    </ContentTemplate>
    <ErrorContentTemplate>
        <tr>
            <td colspan="4">
                <div class="alert alert-danger">Loading failed</div>
            </td>
        </tr>
    </ErrorContentTemplate>
</SpinnerLoader>

@code {
    List<Skill> skills;

    private bool hideRowsPerPage;
    private bool hidePageNumber;
    private bool hidePagination;

    private bool hasError = false;
    private bool isLoading = true;

    private SpinnerTemplate Spinner { get; set; } = SpinnerTemplate.Loader1;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        //await Task.Delay(5000);
        await Task.Delay(1000);

        try
        {
            await LoadSkills();

            if (skills.Count <= 10)
            {
                hideRowsPerPage = true;
                hidePageNumber = true;
                hidePagination = true;
            }
            else
            {
                hideRowsPerPage = true;
                hidePageNumber = false;
                hidePagination = false;
            }
        }
        catch (Exception)
        {
            hasError = true;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task LoadSkills()
    {
        skills = await Http.GetFromJsonAsync<List<Skill>>("api/WebSites/LoadCompetenzeTecniche");
    }
}